//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\HexquisiteLevel.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IHexquisiteLevelListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
#pragma warning disable CS3021
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class HexquisiteLevelBaseListener : IHexquisiteLevelListener {
#pragma warning restore CS3021
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.level"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLevel([NotNull] HexquisiteLevelParser.LevelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.level"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLevel([NotNull] HexquisiteLevelParser.LevelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.version"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVersion([NotNull] HexquisiteLevelParser.VersionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.version"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVersion([NotNull] HexquisiteLevelParser.VersionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.shapes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShapes([NotNull] HexquisiteLevelParser.ShapesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.shapes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShapes([NotNull] HexquisiteLevelParser.ShapesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.keyshape"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyshape([NotNull] HexquisiteLevelParser.KeyshapeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.keyshape"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyshape([NotNull] HexquisiteLevelParser.KeyshapeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.shape"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShape([NotNull] HexquisiteLevelParser.ShapeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.shape"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShape([NotNull] HexquisiteLevelParser.ShapeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.goals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoals([NotNull] HexquisiteLevelParser.GoalsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.goals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoals([NotNull] HexquisiteLevelParser.GoalsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.walls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWalls([NotNull] HexquisiteLevelParser.WallsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.walls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWalls([NotNull] HexquisiteLevelParser.WallsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.piece"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPiece([NotNull] HexquisiteLevelParser.PieceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.piece"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPiece([NotNull] HexquisiteLevelParser.PieceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.anchor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnchor([NotNull] HexquisiteLevelParser.AnchorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.anchor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnchor([NotNull] HexquisiteLevelParser.AnchorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HexquisiteLevelParser.vector2int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVector2int([NotNull] HexquisiteLevelParser.Vector2intContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HexquisiteLevelParser.vector2int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVector2int([NotNull] HexquisiteLevelParser.Vector2intContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
