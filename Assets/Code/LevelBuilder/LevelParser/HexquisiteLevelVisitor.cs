//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\HexquisiteLevel.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="HexquisiteLevelParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
#pragma warning disable CS3021
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface IHexquisiteLevelVisitor<Result> : IParseTreeVisitor<Result> {
#pragma warning restore CS3021
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLevel([NotNull] HexquisiteLevelParser.LevelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVersion([NotNull] HexquisiteLevelParser.VersionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.shapes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShapes([NotNull] HexquisiteLevelParser.ShapesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.keyshape"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyshape([NotNull] HexquisiteLevelParser.KeyshapeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.shape"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShape([NotNull] HexquisiteLevelParser.ShapeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.goals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoals([NotNull] HexquisiteLevelParser.GoalsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.walls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWalls([NotNull] HexquisiteLevelParser.WallsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.piece"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPiece([NotNull] HexquisiteLevelParser.PieceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.anchor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnchor([NotNull] HexquisiteLevelParser.AnchorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="HexquisiteLevelParser.vector2int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVector2int([NotNull] HexquisiteLevelParser.Vector2intContext context);
}
